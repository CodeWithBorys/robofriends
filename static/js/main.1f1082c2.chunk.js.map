{"version":3,"sources":["Search.js","Card.js","CardList.js","App.js","reportWebVitals.js","index.js"],"names":["Search","searchChange","type","name","id","placeholder","onChange","Card","email","className","src","alt","CardList","robots","map","robot","i","App","e","setState","searchterm","target","value","console","log","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","href","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mRAeeA,G,MAZA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAChB,OACE,uBACEC,KAAK,SACLC,KAAK,SACLC,GAAG,YACHC,YAAY,cACZC,SAAUL,MCMDM,G,MAbF,SAAC,GAAyB,IAAvBJ,EAAsB,EAAtBA,KAAMK,EAAgB,EAAhBA,MAAOJ,EAAS,EAATA,GAC3B,OACE,sBAAKK,UAAU,WAAf,UACE,qBACEC,IAAG,+BAA0BN,EAA1B,iBACHO,IAAG,gBAAWR,KAEhB,6BAAKA,IACL,4BAAIK,SCUKI,G,MAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,qBAAKT,GAAG,WAAR,SACGS,EAAOC,KAAI,SAACC,EAAOC,GAClB,OACE,cAAC,EAAD,CAEEZ,GAAIS,EAAOG,GAAGZ,GACdD,KAAMU,EAAOG,GAAGb,KAChBK,MAAOK,EAAOG,GAAGR,OAHZK,EAAOG,GAAGZ,WC6BZa,E,kDAlCb,aAAe,IAAD,8BACZ,gBAaFhB,aAAe,SAACiB,GACd,EAAKC,SAAS,CAACC,WAAYF,EAAEG,OAAOC,QACpCC,QAAQC,IAAI,EAAKJ,aAdjB,EAAKK,MAAQ,CACXZ,OAAQ,GACRO,WAAY,IAJF,E,gEAQO,IAAD,OAClBM,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAM,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACN,OAAQiB,S,+BAQjC,IAAD,OACDC,EAAiBC,KAAKP,MAAMZ,OAAOoB,QAAO,SAAAlB,GAC9C,OAAOA,EAAMZ,KAAK+B,cAAcC,SAAS,EAAKV,MAAML,WAAWc,kBAEjE,OACE,qCACE,6CACA,cAAC,EAAD,CAAQjC,aAAc+B,KAAK/B,eAC3B,cAAC,EAAD,CAAUY,OAAQkB,IAClB,oBAAGtB,UAAU,SAAb,0DAAmE,mBAAG2B,KAAK,oCAAR,qC,GA7BzDC,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.1f1082c2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './search.css';\r\n\r\nconst Search = ({ searchChange }) => {\r\n  return (\r\n    <input\r\n      type=\"search\"\r\n      name=\"search\"\r\n      id=\"searchBox\"\r\n      placeholder=\"find robots\"\r\n      onChange={searchChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './card.css';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className=\"roboCard\">\r\n      <img\r\n        src={`https://robohash.org/${id}?size=200x200`}\r\n        alt={`Robot ${name}`}\r\n      />\r\n      <h2>{name}</h2>\r\n      <p>{email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport './cardList.css';\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div id=\"cardList\">\r\n      {robots.map((robot, i) => {\r\n        return (\r\n          <Card\r\n            key={robots[i].id}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\nimport Search from './Search'\nimport CardList from './CardList'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchterm: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then (users => this.setState({robots: users}))\n  }\n  \n  searchChange = (e) => {\n    this.setState({searchterm: e.target.value});\n    console.log(this.searchterm);\n  };\n    \n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchterm.toLowerCase())\n    })\n    return (\n      <>\n        <h1>Robofriends</h1>\n        <Search searchChange={this.searchChange}/>\n        <CardList robots={filteredRobots}/>\n        <p className=\"footer\">Project was created as part of ZTM Course by <a href=\"https://github.com/CodeWithBorys/\">CodeWithBorys</a></p>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}